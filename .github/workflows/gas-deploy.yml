name: GAS Deployment
on:
  workflow_dispatch:
  push:
    branches: [ main ]
permissions:
  contents: write
  actions: write
  issues: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Install clasp + jq + curl
        run: |
          npm i -g @google/clasp
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Configure clasp auth
        env: { CLASP_TOKEN_JSON: ${{ secrets.CLASP_TOKEN_JSON }} }
        run: |
          set -e
          test -n "$CLASP_TOKEN_JSON" || { echo "CLASP_TOKEN_JSON secret is missing"; exit 1; }
          echo "$CLASP_TOKEN_JSON" > ~/.clasprc.json
          chmod 600 ~/.clasprc.json
          clasp --version
          clasp whoami || { echo "clasp whoami failed"; exit 1; }

      - name: Configure .clasp.json
        env: { GAS_SCRIPT_ID: ${{ secrets.GAS_SCRIPT_ID }} }
        run: |
          set -e
          test -n "$GAS_SCRIPT_ID" || { echo "GAS_SCRIPT_ID secret is missing"; exit 1; }
          root="."
          [ -d "src" ] && root="src"
          cat > .clasp.json <<JSON
          { "scriptId": "$GAS_SCRIPT_ID", "rootDir": "$root" }
          JSON
          echo "Using rootDir=$root"

      - name: Push source to Apps Script
        run: |
          set -e
          clasp push -f
          echo "clasp push âœ“" | tee -a $GITHUB_STEP_SUMMARY

      - name: Version & Deploy (idempotent)
        id: deploy
        run: |
          set -e
          TS=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          clasp version "ci: $TS" || true
          clasp deploy --description "ci: $TS" || true
          echo "deploy attempted âœ“" | tee -a $GITHUB_STEP_SUMMARY

      - name: Locate EXEC_URL (JSON-first)
        id: exec1
        continue-on-error: true
        run: |
          set -e
          url="$(clasp deployments --json 2>/dev/null | jq -r '.deployments[]? | .entryPoints[]? | select(.entryPointType=="WEB_APP") | .url' | head -n1)"
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "Locate(JSON): $url" | tee -a $GITHUB_STEP_SUMMARY

      - name: Locate EXEC_URL (fallback open)
        id: exec2
        if: steps.exec1.outputs.url == ''
        continue-on-error: true
        run: |
          set -e
          url="$(clasp open --webapp 2>/dev/null | grep -Eo 'https://script\.google(?:usercontent)?\.com/[^ ]+|https://script\.google\.com/[^ ]+' | head -n1)"
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "Locate(open): $url" | tee -a $GITHUB_STEP_SUMMARY

      - name: Finalize EXEC_URL
        id: execurl
        run: |
          set -e
          url="${{ steps.exec1.outputs.url }}"; [ -z "$url" ] && url="${{ steps.exec2.outputs.url }}"
          echo "EXEC_URL=$url" | tee -a $GITHUB_STEP_SUMMARY
          echo "url=$url" >> $GITHUB_OUTPUT
          [ -n "$url" ] || { echo "No EXEC_URL found"; exit 1; }

      - name: Selftest
        id: selftest
        run: |
          set -e
          exec_url="${{ steps.execurl.outputs.url }}"
          sep='?'; echo "$exec_url" | grep -q '?' && sep='&' || true
          test_url="${exec_url}${sep}mode=selftest"
          code=$(curl -sS -o /tmp/selftest.json -w "%{http_code}" "$test_url" || true)
          echo "Selftest URL: $test_url" | tee -a $GITHUB_STEP_SUMMARY
          echo "HTTP $code" | tee -a $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          sed -n '1,80p' /tmp/selftest.json >> $GITHUB_STEP_SUMMARY || true
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "code=$code" >> $GITHUB_OUTPUT

      - name: Post summary to Issue #8
        if: always()
        env: { GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} }
        run: |
          set -e
          url="${{ steps.execurl.outputs.url }}"
          code="${{ steps.selftest.outputs.code }}"
          body="### ðŸ§­ Automation Report â€” $(date -u +%Y-%m-%dT%H:%M:%SZ)%0A- EXEC_URL: ${url}%0A- SELFTEST: HTTP ${code}"
          gh issue comment 8 -R ${{ github.repository }} --body "$body" || true
