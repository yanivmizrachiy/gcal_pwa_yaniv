name: Autonomous Progress Cycle

on:
  schedule:
    # Runs hourly at minute 0
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run even if safety gates fail'
        required: false
        type: boolean
        default: false
  push:
    branches:
      - main
    paths:
      - 'scripts/**'
      - '.github/workflows/auto-progress.yml'

permissions:
  contents: write
  issues: write

concurrency:
  group: auto-progress-cycle
  cancel-in-progress: false

env:
  # Safety gate configuration
  MIN_MINUTES_BETWEEN_COMMITS: 60
  MIN_DIFF_LINES: 5
  AUTO_COMMIT_ENABLED: true

jobs:
  autonomous-cycle:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Safety gate - Check last auto-commit time
        id: safety_gate
        run: |
          echo "Checking safety gates..."
          
          # Check last auto-commit timestamp
          last_commit_ts=$(git log --all --grep="\[auto-cycle\]" --format="%ct" -n 1 || echo "0")
          current_ts=$(date +%s)
          minutes_since=$(((current_ts - last_commit_ts) / 60))
          
          {
            echo "last_commit_ts=$last_commit_ts"
            echo "current_ts=$current_ts"
            echo "minutes_since=$minutes_since"
          } >> "$GITHUB_OUTPUT"
          
          echo "Minutes since last auto-commit: $minutes_since"
          echo "Minimum required: $MIN_MINUTES_BETWEEN_COMMITS"
          
          if [ "$minutes_since" -lt "$MIN_MINUTES_BETWEEN_COMMITS" ] && [ "${{ github.event.inputs.force_run }}" != "true" ]; then
            echo "safety_passed=false" >> "$GITHUB_OUTPUT"
            echo "⏸️ Safety gate: Too soon since last auto-commit. Skipping cycle."
            exit 0
          else
            echo "safety_passed=true" >> "$GITHUB_OUTPUT"
            echo "✅ Safety gate passed: Proceeding with cycle."
          fi

      - name: Run self-check diagnostics
        if: steps.safety_gate.outputs.safety_passed == 'true'
        run: |
          echo "Running self-check diagnostics..."
          node scripts/self_check.js
          
          if [ -f .autonomy/diagnostics/self_check.json ]; then
            echo "✅ Self-check completed"
            cat .autonomy/diagnostics/self_check.json
          else
            echo "⚠️ Self-check did not generate diagnostics file"
          fi

      - name: Run automation tasks
        if: steps.safety_gate.outputs.safety_passed == 'true'
        run: |
          echo "Running automation tasks..."
          chmod +x scripts/auto_task.sh
          bash scripts/auto_task.sh
          
          if [ -f .autonomy/meta/STATUS.json ]; then
            echo "✅ Automation tasks completed"
            cat .autonomy/meta/STATUS.json
          fi

      - name: Optional sync tasks
        if: steps.safety_gate.outputs.safety_passed == 'true'
        continue-on-error: true
        run: |
          echo "Running optional sync tasks..."
          if command -v pwsh &> /dev/null; then
            chmod +x scripts/auto_sync.ps1
            pwsh scripts/auto_sync.ps1
          else
            echo "⚠️ PowerShell not available, skipping sync tasks"
          fi

      - name: Generate cycle report
        if: steps.safety_gate.outputs.safety_passed == 'true'
        id: report
        run: |
          timestamp=$(date -u +"%Y%m%d_%H%M%S")
          report_file=".autonomy/reports/cycle_${timestamp}.md"
          
          echo "Generating cycle report: $report_file"
          mkdir -p .autonomy/reports
          
          cat > "${report_file}" <<EOF
          # Autonomous Cycle Report
          
          **Timestamp:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Run ID:** ${{ github.run_id }}
          **Trigger:** ${{ github.event_name }}
          **Branch:** $(git branch --show-current)
          
          ## Diagnostics
          
          \`\`\`json
          $(cat .autonomy/diagnostics/self_check.json 2>/dev/null || echo '{"error": "No diagnostics available"}')
          \`\`\`
          
          ## Status
          
          \`\`\`json
          $(cat .autonomy/meta/STATUS.json 2>/dev/null || echo '{"error": "No status available"}')
          \`\`\`
          
          ## Repository State
          
          - Total files: $(find . -type f ! -path './.git/*' | wc -l)
          - Modified files (uncommitted): $(git status --short | wc -l)
          
          ## Changes Summary
          
          \`\`\`
          $(git status --short 2>/dev/null || echo "No changes")
          \`\`\`
          
          ---
          *Generated by autonomous progress cycle*
          EOF
          
          echo "report_file=$report_file" >> "$GITHUB_OUTPUT"
          echo "✅ Report generated: $report_file"

      - name: Check diff threshold
        if: steps.safety_gate.outputs.safety_passed == 'true'
        id: diff_check
        run: |
          # Count lines changed
          diff_lines=$(git diff --cached --numstat 2>/dev/null | awk '{sum+=$1+$2} END {print sum+0}')
          unstaged_lines=$(git diff --numstat 2>/dev/null | awk '{sum+=$1+$2} END {print sum+0}')
          total_lines=$((diff_lines + unstaged_lines))
          
          echo "diff_lines=$total_lines" >> "$GITHUB_OUTPUT"
          echo "Lines changed: $total_lines"
          echo "Minimum threshold: $MIN_DIFF_LINES"
          
          if [ "$total_lines" -ge "$MIN_DIFF_LINES" ] || [ "${{ github.event.inputs.force_run }}" == "true" ]; then
            echo "should_commit=true" >> "$GITHUB_OUTPUT"
            echo "✅ Diff threshold met: Will commit changes"
          else
            echo "should_commit=false" >> "$GITHUB_OUTPUT"
            echo "⏸️ Diff threshold not met: Skipping commit"
          fi

      - name: Commit and push changes
        if: |
          steps.safety_gate.outputs.safety_passed == 'true' &&
          steps.diff_check.outputs.should_commit == 'true' &&
          env.AUTO_COMMIT_ENABLED == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Stage all changes in .autonomy directory
          git add .autonomy/
          
          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            commit_msg="[auto-cycle] Autonomous progress update $(date -u +%Y-%m-%d_%H:%M:%S)"
            git commit -m "$commit_msg"
            git push
            echo "✅ Changes committed and pushed"
          fi

      - name: Summary
        if: always()
        run: |
          {
            echo "## Autonomous Cycle Summary"
            echo ""
            echo "- **Safety Gate:** ${{ steps.safety_gate.outputs.safety_passed }}"
            echo "- **Minutes Since Last:** ${{ steps.safety_gate.outputs.minutes_since }}"
            echo "- **Diff Lines:** ${{ steps.diff_check.outputs.diff_lines }}"
            echo "- **Should Commit:** ${{ steps.diff_check.outputs.should_commit }}"
            echo ""
          } >> "$GITHUB_STEP_SUMMARY"
          
          if [ -f "${{ steps.report.outputs.report_file }}" ]; then
            {
              echo "### Latest Report"
              echo ""
              cat "${{ steps.report.outputs.report_file }}"
            } >> "$GITHUB_STEP_SUMMARY"
          fi
